/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import data.Index;
import data.Words;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.event.TreeSelectionEvent;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import javax.swing.tree.TreePath;

/**
 *
 * @author Rhadryn
 */
public class BrowsePanel extends javax.swing.JPanel {
    private HomeView home;
    private DefaultListModel listModel;
    private ArrayList<Words> reviewQueue;
    private ArrayList<Index> indices;

    /**
     * Creates new form BrowsePanel
     */
    public BrowsePanel(HomeView home, ArrayList<Index> indices) {
        this.home = home;
        this.indices = indices;
        //Initialize data structures
        listModel = new DefaultListModel();
        reviewQueue = new ArrayList<>();
        
        initComponents();
        
        refreshLibrary(indices);
        
        //Enable view and add buttons when tree nodes are selected
        indexTree.addTreeSelectionListener((TreeSelectionEvent e) -> {
            DefaultMutableTreeNode node = (DefaultMutableTreeNode)
                    indexTree.getLastSelectedPathComponent();
            /* if nothing is selected */
            if (node == null){
                viewButton.setEnabled(false);
                addButton.setEnabled(false);
                deleteButton.setEnabled(false);
            }
            else{
                viewButton.setEnabled(true);
                addButton.setEnabled(true);
                deleteButton.setEnabled(true);
            }
        });
        
    }
    
    public void refreshLibrary(ArrayList<Index> indices){
        //Initialize index tree
        DefaultMutableTreeNode top =
                new DefaultMutableTreeNode("Home");
        createNodes(top, indices);
        DefaultTreeModel model = new DefaultTreeModel(top);
        model.reload(top);
        indexTree.setModel(model);
    }
    
    /**
     * Initializes the index list recursively
     */
    private void createNodes(DefaultMutableTreeNode top, 
              ArrayList<Index> indices) {    
        for(Index i : indices){
            DefaultMutableTreeNode newNode = 
                    new DefaultMutableTreeNode(i.getName());
            top.add(newNode);
            createNodes(newNode, i.getChildren());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        reviewList = new javax.swing.JList<>();
        reviewButton = new javax.swing.JButton();
        addButton = new javax.swing.JButton();
        viewButton = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        indexTree = new javax.swing.JTree();
        removeButton = new javax.swing.JButton();
        importButton = new javax.swing.JButton();
        newButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(210, 255, 210));

        reviewList.setBackground(new java.awt.Color(250, 250, 250));
        reviewList.setModel(listModel);
        reviewList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                reviewListValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(reviewList);

        reviewButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        reviewButton.setText("Start Review");
        reviewButton.setEnabled(false);
        reviewButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reviewButtonActionPerformed(evt);
            }
        });

        addButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        addButton.setText("Add for Review-->");
        addButton.setEnabled(false);
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        viewButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        viewButton.setText("View text");
        viewButton.setEnabled(false);
        viewButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewButtonActionPerformed(evt);
            }
        });

        indexTree.setBackground(new java.awt.Color(250, 250, 250));
        indexTree.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        indexTree.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        indexTree.setRootVisible(false);
        jScrollPane3.setViewportView(indexTree);

        removeButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        removeButton.setEnabled(false);
        removeButton.setLabel("<--Remove from Review");
        removeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeButtonActionPerformed(evt);
            }
        });

        importButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        importButton.setLabel("Import Text");
        importButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                importButtonActionPerformed(evt);
            }
        });

        newButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        newButton.setLabel("Add New Text");
        newButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newButtonActionPerformed(evt);
            }
        });

        deleteButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        deleteButton.setText("Delete Text");
        deleteButton.setEnabled(false);
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 173, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(importButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(viewButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(addButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(removeButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(newButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(deleteButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(reviewButton, javax.swing.GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(reviewButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(viewButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(removeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(importButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(newButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void reviewListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_reviewListValueChanged
        if(reviewList.getSelectedIndex() < 0){
            removeButton.setEnabled(false);
        }
        else{
            removeButton.setEnabled(true);
        }
    }//GEN-LAST:event_reviewListValueChanged

    private void reviewButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reviewButtonActionPerformed
        listModel.clear();
        home.reviewText(reviewQueue);
    }//GEN-LAST:event_reviewButtonActionPerformed

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        ArrayList<Words> selected = 
                home.getTextFromRef(indexTree.getSelectionPath());
        for( Words w : selected ){
            reviewQueue.add(w);
            listModel.addElement(w.indicesToString());
        }
        reviewList.repaint();
        reviewButton.setEnabled(true);
    }//GEN-LAST:event_addButtonActionPerformed

    private void viewButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewButtonActionPerformed
        home.viewText(indexTree.getSelectionPath());
    }//GEN-LAST:event_viewButtonActionPerformed

    private void removeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeButtonActionPerformed
        //Remove the selected text from the internal list of review texts
        reviewQueue.remove(reviewList.getSelectedIndex());
        //Remove the selected index from the list of indices to be reviewed
        listModel.removeElementAt(reviewList.getSelectedIndex());
        //Repaint the review list
        reviewList.clearSelection();
        reviewList.repaint();
        //Disable review button if there are no texts that can be reviewed
        if(listModel.size() <= 0){
            reviewButton.setEnabled(false);
        }
    }//GEN-LAST:event_removeButtonActionPerformed

    private void importButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_importButtonActionPerformed
        home.importText();
    }//GEN-LAST:event_importButtonActionPerformed

    private void newButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newButtonActionPerformed
        //Adding new text uses the same panel as editing texts,
        //so we create a new Words object and pass it to the edit panel.
        home.editText(new Words());
    }//GEN-LAST:event_newButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        int dialogResult = JOptionPane.showConfirmDialog (null,
            "Are you sure you want to delete this text?", "Warning",
            JOptionPane.YES_NO_OPTION);
        if(dialogResult == JOptionPane.YES_OPTION){
            //remove text
            //use reference to get Words object, then pass to home.removeWords()
        }
    }//GEN-LAST:event_deleteButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JButton deleteButton;
    private javax.swing.JButton importButton;
    private javax.swing.JTree indexTree;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton newButton;
    private javax.swing.JButton removeButton;
    private javax.swing.JButton reviewButton;
    private javax.swing.JList<String> reviewList;
    private javax.swing.JButton viewButton;
    // End of variables declaration//GEN-END:variables
}
